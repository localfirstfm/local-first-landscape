{
  "Version": 1,
  "Id": "livestore",
  "Name": "LiveStore",
  "Description": "Client-centric local-first data layer for high-performance apps",
  "MaturityLevel": "Beta",
  "Website": "https://livestore.dev",
  "GitHub": "https://github.com/livestore-dev/livestore",
  "GetStarted": "https://livestore.dev",
  "InitialReleaseDate": "2021-12-01T00:00:00.000Z",
  "Deployment": [
    "Self-hosted"
  ],
  "AppTarget": {
    "Platform": {
      "data": [
        "Browser",
        "Node",
        "iOS",
        "Android"
      ]
    },
    "LanguageSDK": {
      "data": [
        "TypeScript"
      ]
    },
    "FrameworkIntegrations": {
      "data": [
        "React",
        "React Native",
        "Solid"
      ]
    },
    "ClientBundleSize": {
      "data": "~500kb gzipped",
      "comment": "For web apps, LiveStore ships with a SQLite WASM build (~600kb / 300kb gzipped) and the library itself is around 500kb / 170kb gzipped."
    }
  },
  "Networking": {
    "Protocol": {
      "data": [
        "WebSockets",
        "HTTP",
        "SSE"
      ],
      "comment": "Given LiveStore supports arbitrary sync backends, any kind of network protocol can be used."
    },
    "Topology": {
      "data": "Client-Server"
    }
  },
  "ServerSideData": {
    "PersistenceMechanism": {
      "data": [
        "Cloudflare D1",
        "Postgres",
        "SQLite",
        "Custom"
      ],
      "comment": "Almost anything works as long as it can persist an eventlog."
    },
    "DataSize": {
      "data": "10GB",
      "comment": "Theoretically there isn't an upper limit to the eventlog size however at some point it might become impractical to sync the eventlog over the network."
    },
    "DataModelParadigm": {
      "data": "Eventlog"
    }
  },
  "ClientSideData": {
    "QueryAPI": {
      "data": [
        "Reactive queries",
        "Signals-based Reactivity",
        "Sync"
      ]
    },
    "LocalRefreshLatency": {
      "data": "~1ms",
      "comment": "LiveStore is designed to enable next-frame refresh latency by using an in-memory SQLite database with a signals-based reactivivity system."
    },
    "PersistenceMechanism": {
      "data": [
        "IndexedDB",
        "OPFS"
      ]
    },
    "PersistenceFeatures": {
      "data": "Indexes"
    },
    "DataModel": {
      "data": "Event Sourcing",
      "comment": "LiveStore follows the event sourcing pattern which separates writes into an eventlog and materializes state into a local SQLite database."
    },
    "OfflineReads": {
      "data": "Full Support"
    },
    "OptimisticUpdates": {
      "data": "Yes",
      "comment": "There isn't an explicit concept of \"optimistic updates\" in LiveStore. Events are always executed locally first and then synced to other clients. In case of a conflict, the event is rebased and replayed. This is similar to how Git works."
    },
    "OfflineWrites": {
      "data": "Local conflict resolution"
    },
    "DataSize": {
      "data": "<1GB",
      "comment": "The upper limit is mostly determined by the used browser or client device. SQLite stores data fairly efficiently, so you should rarely hit any limits in regards to size."
    }
  },
  "SynchronizationStrategy": {
    "FullOrPartialReplication": {
      "data": [
        "Full Replication"
      ]
    },
    "ConflictHandling": {
      "data": "Automatic via CRDT"
    },
    "WhereResolutionOccurs": {
      "data": "Client"
    },
    "WhatGetsSynced": {
      "data": {
        "ClientToClient": "Ops"
      }
    }
  },
  "DevelopmentWorkflowsDX": {
    "DebuggingTools": {
      "data": [
        "DevTools",
        "Data Inspector",
        "Network Inspector"
      ]
    }
  },
  "__generated": {
    "lastUpdated": "2025-04-29T14:51:46.000Z"
  }
}