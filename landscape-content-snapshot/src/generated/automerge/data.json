{
  "Version": 1,
  "Id": "automerge",
  "Name": "Automerge",
  "Description": "Automerge enables local first applications by providing generic version control for JSON documents",
  "MaturityLevel": "Production-Ready",
  "Website": "https://automerge.org",
  "GitHub": "https://github.com/automerge/automerge",
  "GetStarted": "https://automerge.org/docs/hello/",
  "InitialReleaseDate": "2017-01-01T00:00:00.000Z",
  "NotableAdopters": [
    {
      "Name": "GoodNotes",
      "URL": "https://github.com/automerge/automerge"
    },
    {
      "Name": "Bowtie",
      "URL": "https://www.bowtie.security/"
    }
  ],
  "Deployment": [
    "Self-hosted"
  ],
  "License": "MIT",
  "AppTarget": {
    "Platform": {
      "data": [
        "Browser",
        "Node",
        "iOS",
        "Android",
        "macOS",
        "Linux",
        "Windows",
        "WASM"
      ],
      "comment": "Automerge itself supports all these platforms, but the automerge-repo companion library is currently only available in JavaScript environments (excluding React Native) and Swift environments. Other platforms are in development."
    },
    "LanguageSDK": {
      "data": [
        "JavaScript",
        "TypeScript",
        "Swift",
        "Rust",
        "Go",
        "Java",
        "Kotlin"
      ],
      "comment": "The officially supported languages are JavaScript, TypeScript, Swift, and Rust. Go, Java and Kotlin are best-effort but tend to lag behind the official implementations"
    },
    "FrameworkIntegrations": {
      "data": [
        "React",
        "Svelte"
      ]
    },
    "ClientBundleSize": {
      "data": "~800Kb gzipped"
    }
  },
  "Networking": {
    "Protocol": {
      "data": [
        "WebSockets",
        "TCP"
      ],
      "comment": "The Automerge sync protocol runs over anything which provides an in-order byte stream"
    },
    "Topology": {
      "data": "P2P",
      "comment": "Typical deployments use a central relay server with opportunistic peer-to-peer"
    }
  },
  "ServerSideData": {
    "PersistenceMechanism": {
      "data": [
        "Local file system",
        "Custom"
      ],
      "comment": "Automerge can use any storage mechanism which supports key/value storage with range queries. There are community maintained adapters for many storage backends including PostgreSQL and S3"
    },
    "DataModelParadigm": {
      "data": "Document"
    }
  },
  "ClientSideData": {
    "QueryAPI": {
      "data": [
        "Async"
      ]
    },
    "LocalRefreshLatency": {
      "data": "~10-100ms"
    },
    "PersistenceMechanism": {
      "data": [
        "IndexedDB",
        "Local file system",
        "Custom"
      ],
      "comment": "Automerge can use any storage mechanism which supports key/value storage with range queries"
    },
    "DataModel": {
      "data": "Document"
    },
    "OfflineReads": {
      "data": "Full Support"
    },
    "OfflineWrites": {
      "data": "Local conflict resolution"
    },
    "DataSize": {
      "data": "up to 5-10mb per doc"
    }
  },
  "SynchronizationStrategy": {
    "FullOrPartialReplication": {
      "data": [
        "Full Replication"
      ]
    },
    "ConflictHandling": {
      "data": "Automatic via CRDT",
      "comment": "All changes are recorded and conflicts can be examined and resolved later"
    },
    "WhereResolutionOccurs": {
      "data": "Client"
    },
    "WhatGetsSynced": {
      "data": {
        "ClientToServer": "ops",
        "ServerToClient": "ops",
        "ClientToClient": "ops"
      },
      "comment": "There is no distinction between client and server in Automerge"
    },
    "Authority": {
      "data": "Decentralized"
    },
    "Latency": {
      "data": "~10-100ms"
    }
  },
  "AuthIdentity": {
    "Encryption": {
      "data": "Transport-level encryption"
    },
    "AuthenticationMethod": {
      "data": [
        "Full Custom"
      ]
    },
    "AuthorizationPermissions": {
      "data": "Custom"
    }
  },
  "UIRelated": {
    "RichTextEditing": {
      "data": "Yes"
    },
    "Components": {
      "data": [
        "ProseMirror plugin",
        "CodeMirror plugin",
        "React hooks"
      ]
    }
  },
  "__generated": {
    "lastUpdated": "2025-04-29T17:35:36.000Z"
  }
}